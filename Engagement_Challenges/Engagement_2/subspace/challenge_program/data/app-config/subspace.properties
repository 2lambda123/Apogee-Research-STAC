# Path to a database file. The permissions on this file should prevent
# unauthorized users from reading or writing it.
subspace.db = /home/subspace/data/subspace.db

# Ports to listen on. These should probably be greater than 1024.
subspace.httpdHost = 127.0.0.1
subspace.httpdPort = 8080
subspace.smtpdPort = 2525

# Domain to accept mail for.
subspace.mailLocalName = subspace.localhost

# Email local parts (the part before '@') that initiate a new
# conversation.
subspace.newAliasName.0 = hail
subspace.newAliasName.1 = open-a-channel

# Configure email sending. See
# http://www.oracle.com/technetwork/java/javamail-1-149769.pdf
# Appendix A for more information.
mail.transport.protocol = smtp
mail.smtp.host = localhost

# Where to send messages from if we don't want a reply.
subspace.message.no-reply-from = no-reply@subspace.localhost

# String to prepend to the subject line of all emails.
subspace.message.subjectPrepend = [subspace]\u0020

# Message to send to a newly registered user to get them to confirm
# their email address.
subspace.message.register.confirm.subject = \
    your Subspace registration
subspace.message.register.confirm.text = \
    Somebody has registered this email address for Subspace \
    communications, under the username %2$s. If that was you, please \
    complete your registration by going to the URL below. If that \
    was not you, you may disregard this message.\n\
    \n\
    https://localhost:8443/confirm?token=%1$s

# Message to send to a new user after registration is completed.
subspace.message.register.done.subject = \
    Welcome to Subspace!
subspace.message.register.done.text = \
    Welcome to Subspace, and thank you for registering your \
    starship! Your username is %1$s.\n\
    \n\
    To set/update to your current location, go to the following URL \
    (substituting <password>, <latitude>, and <longitude> \
    appropriately): \
    https://localhost:8443/update-location\
        ?username=%1$s\
        &password=<password>\
        &lat=<latitude>\
        &lon=<longitude>\
        \n\
    \n\
    If you decide that you want to stop receiving messages for a \
    time, you can set your location to "away" by going to the \
    following URL (with similar substitutions): \
    https://localhost:8443/update-location\
        ?username=%1$s\
        &password=<password>\
        &away=true\
        \n\
    \n\
    To send a hail to whichever starship is closest to you at the \
    moment, just send an email to hail@subspace.localhost.

# Text to prepend to an initial message sent to the initiator of the
# message.
subspace.message.new.initiator = \
    Captain, the message has been sent. Sit tight, buckle your \
    seat belt if you've got one, and wait for a reply.

# Text to prepend to an initial message sent to somebody other than
# the intiator of the message.
subspace.message.new.other = \
    Greetings captain! You have received an anonymous hail from the \
    captain of a nearby starship. They don't know who you are and \
    you don't know who they are, but you're free to communicate with \
    them by responding to this email.

# Text to prepend to a reply to an existing message, sent to the
# person who sent the reply.
subspace.message.existing.sender = \
    Your message has been sent. Maybe you should reverse the \
    polarity of your warp field while you wait?

# Text to prepend to a reply to an existing message, sent to somebody
# other than the sender of the message.
subspace.message.existing.other = \
    Another captain has replied to an existing hail:
