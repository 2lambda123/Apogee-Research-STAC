import time
from interact_bidpal import BidPalUser
bin_dir = "../challenge_program/bin"

def main():
    user0 = BidPalUser(bin_dir, "8000", "seller")
    user1 = BidPalUser(bin_dir, "8001", "user1")
    user2 = BidPalUser(bin_dir, "8002", "user2")
    attacker = BidPalUser(bin_dir, "8003", "attacker", malicious_user=True)
    
    time.sleep(1)
    user0.connect("127.0.0.1", "8002")
    user0.connect("127.0.0.1", "8001")
    user0.connect("127.0.0.1", "8003")
    user1.connect("127.0.0.1", "8002")
    attacker.connect("127.0.0.1", "8001")
    attacker.connect("127.0.0.1", "8002")
    
    user0.start_auction("Applied Cryptography book, new condition", "auction1")

    # give users a chance to receive and process auction start message
    user1.wait_for_output("received auction start announcement")
    user2.wait_for_output("received auction start announcement")
    attacker.wait_for_output("received auction start announcement") 
    time.sleep(1) # give users time to process the start announcement

    # two users bid
    user1.bid("auction1", "10")
    user2.wait_for_output("received a bid commitment")
    user2.bid("auction1", "11")

    # wait for comparisons to happen
    print user1.wait_for_compare_results() # user1's bid compared to user2's
    print user2.wait_for_compare_results() # user2's bid compared to user1's

    # attacker bids
    attacker.bid("auction1", "5")

    # compare results will never arrive from user1 or user2
    # processes for user1, user2 will have high CPU usage
    # attacker will still be able to interact with other users
    print 'attacker submitted bid; waiting for users to compare results'
    print 'expect a timeout Exception in 1200 seconds'
    attacker.wait_for_compare_results(timeout=1200)

    
if __name__=="__main__":
    main()
